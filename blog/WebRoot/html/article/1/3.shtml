<!DOCTYPE html>

<html lang="cn">

<head>

<meta content="IE=10,IE=9,IE=8,ie=7" http-equiv="X-UA-Compatible">

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />

<meta name="viewport" content="width=device-width, initial-scale=1.0">

<title>Mapreduce案例-数据排序|小倪的博客</title>

<meta content="大数据  hadoop hive hbase spark" name="keywords">

<meta content="bigdata  Hadoop HIve 大数据  Hbase spark" name="description">

<!--[if lt IE 9]><script src="../../../js/controlcenter/html5.js"></script><![endif]-->

<!-- Bootstrap -->

<link rel="stylesheet" href="../../../bootstrap/css/bootstrap.min.css">

<link rel="stylesheet" href="../../../css/blog.css">

<!-- 响应式css -->

<link rel="stylesheet" href="../../../bootstrap/css/bootstrap-responsive.css">

<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->

<script src="../../../js/jquery-1.10.2.min.js"></script>

<!-- Include all compiled plugins (below), or include individual files as needed -->

<script src="../../../bootstrap/js/bootstrap.min.js"></script>

<SCRIPT language=JavaScript src="../../../js/xmlhttp.js"></SCRIPT>

<!-- 代码高亮 -->

<script src="../../../js/controlcenter/ueditor/third-party/SyntaxHighlighter/shCore.js" type="text/javascript"></script>

<link href="../../../js/controlcenter/ueditor/third-party/SyntaxHighlighter/shCoreDefault.css" rel="stylesheet" type="text/css">

<script type="text/javascript" language="javascript">

	$(function() {

		SyntaxHighlighter.all();

	});

</script>

<script type="text/javascript">

<!--		 	

	function getClassifyList(){				

	var classifyList = document.getElementById('classifyList');						

	if(classifyList){					

		classifyList.innerHTML= "数据正在加载...";					

		send_request(function(value){classifyList.innerHTML=value},							 

				"/article/switch.do?method=classifyList", true);				

		}			

	}			        	

	function getArticleList(){				

		var newestArticle = document.getElementById('newestArticle');

		if(newestArticle){					

			newestArticle.innerHTML= "数据正在加载...";

			send_request(function(value){newestArticle.innerHTML=value},							 

					"/article/switch.do?method=newestArticle", true);				

			}			

		}						

	function pageInit(){				

		getArticleList();				

		getClassifyList();			

		}         

	//-->

</script>

</head>

<body onLoad="javascript:pageInit()">

	<!-- nav -->

	<!--#include virtual="/WEB-INF/page/share/head.jsp" -->

	<!-- body -->

	<div class="container">

		<div class="row-fluid">

			<!-- content -->

			<div class="span9">

				<div class="well well-large blog-content">

					<div class="title-box">

						<ul class="date-b">

							<li class="date-m">12月</li>

							<li class="date-d">18日</li>

						</ul>

						<h1 class="article-title">Mapreduce案例-数据排序</h1>

					</div>

					<div class="article-content">

						<p>

							<strong>

							<span style="font-size: 14px; font-family: 微软雅黑,&amp; #39; Microsoft YaHei&amp;#39;; color: rgb(66, 139, 202);">1：数据排序</span></strong>

						</p>

						<p>

							<span style="font-size: 14px; font-family: 微软雅黑,&amp; #39;">&nbsp;

								&nbsp; <span style="color: #FF0033;">“数据排序”</span>主要是对一些数据做预处理，是许多任务执行的第一项工作。例如统计排名等。“数据排序”<span

								style="color: #FF0033;">上一个案例</span>相似，都是对数据预处理，下面是实例。

							</span>

						</p>

						<p>

							<strong><span style="font-size: 14px; font-family: 微软雅黑,&amp; #39; Microsoft YaHei&amp;#39;; color: rgb(66, 139, 202);">1.1案例描述</span></strong>

						</p>

						<p>

							<span style="font-size: 14px; font-family: 微软雅黑,&amp; #39;">&nbsp;

								&nbsp;

								对输入数据排序。输入文件中的每行都是一个数字。业务要求，需要输出中德每行有两个数字间隔，第一个代表数据的位次，第二个代表原始数据。</span>

						</p>

						<p>

							<span

								style="font-family: 微软雅黑,&amp; #39; Microsoft YaHei&amp;#39;; font-size: 14px;">&nbsp;

								&nbsp; 案例数据如下：</span>

						</p>

						<p>

							<span

								style="font-family: 微软雅黑,&amp; #39; Microsoft YaHei&amp;#39;; font-size: 14px; color: rgb(66, 139, 202);">&nbsp;

								&nbsp; <strong>1）file:</strong>

							</span>

						</p>

						<p>

							<span style="font-size: 14px; font-family: 微软雅黑,&amp; #39;"><span style="font-size: 14px; font-family: &amp; #39;">&nbsp;

									&nbsp;&nbsp;</span><span style="font-size: 10.5pt; font-family: 微软雅黑,&amp; #39; Microsoft YaHei&amp;#39;; line-height: 1.5;">3</span></span>

						</p>

						<p>

							<span style="font-size: 14px; font-family: 微软雅黑,&amp; #39;"><span style="font-size: 10.5pt; font-family: &amp; #39; Microsoft YaHei UI&amp;#39;; line-height: 1.5;">&nbsp;

									&nbsp;&nbsp;</span>45</span>

						</p>

						<p>

							<span style="font-size: 14px; font-family: 微软雅黑,&amp; #39;"><span style="font-size: 10.5pt; font-family: &amp; #39; Microsoft YaHei UI&amp;#39;; line-height: 1.5;">&nbsp;

									&nbsp;&nbsp;</span>23</span>

						</p>

						<p>

							<span style="font-size: 14px; font-family: 微软雅黑,&amp; #39;"><span style="font-size: 10.5pt; font-family: &amp; #39; Microsoft YaHei UI&amp;#39;; line-height: 1.5;">&nbsp;

									&nbsp;&nbsp;</span>11</span>

						</p>

						<p>

							<span style="font-size: 14px; font-family: 微软雅黑,&amp; #39;"><span style="font-size: 10.5pt; font-family: &amp; #39; Microsoft YaHei UI&amp;#39;; line-height: 1.5;">&nbsp;

									&nbsp;&nbsp;</span>465</span>

						</p>

						<p>

							<span style="font-size: 14px; font-family: 微软雅黑,&amp; #39;"><span style="font-size: 10.5pt; font-family: &amp; #39; Microsoft YaHei UI&amp;#39;; line-height: 1.5;">&nbsp;

									&nbsp;&nbsp;</span>87</span>

						</p>

						<p>

							<span style="font-size: 14px; font-family: 微软雅黑,&amp; #39;"><span style="font-size: 10.5pt; font-family: &amp; #39; Microsoft YaHei UI&amp;#39;; line-height: 1.5;">&nbsp;

									&nbsp;&nbsp;</span>567</span>

						</p>

						<p>

							<span style="font-size: 14px; font-family: 微软雅黑,&amp; #39;"><span style="font-size: 10.5pt; font-family: &amp; #39; Microsoft YaHei UI&amp;#39;; line-height: 1.5;">&nbsp;

									&nbsp;&nbsp;</span>3000</span>

						</p>

						<p>

							<span style="font-size: 14px; font-family: 微软雅黑,&amp; #39;"><span style="font-size: 10.5pt; font-family: &amp; #39; Microsoft YaHei UI&amp;#39;; line-height: 1.5;">&nbsp;

									&nbsp;&nbsp;</span>47</span>

						</p>

						<p>

							<span style="font-size: 14px; font-family: 微软雅黑,&amp; #39;"><span style="font-size: 10.5pt; font-family: &amp; #39; Microsoft YaHei UI&amp;#39;; line-height: 1.5;">&nbsp;

									&nbsp;&nbsp;</span>98</span>

						</p>

						<p>

							<span style="font-size: 14px; font-family: 微软雅黑,&amp; #39;"><span style="font-size: 10.5pt; font-family: &amp; #39; Microsoft YaHei UI&amp;#39;; line-height: 1.5;">&nbsp;

									&nbsp;&nbsp;</span>534</span>

						</p>

						<p>

							<span style="font-size: 14px; font-family: 微软雅黑,&amp; #39;"><span style="font-size: 10.5pt; font-family: &amp; #39; Microsoft YaHei UI&amp;#39;; line-height: 1.5;">&nbsp;

									&nbsp;&nbsp;</span>9</span>

						</p>

						<p>

							<span style="font-size: 14px; font-family: 微软雅黑,&amp; #39;"><span style="font-size: 10.5pt; font-family: &amp; #39; Microsoft YaHei UI&amp;#39;; line-height: 1.5;">&nbsp;

									&nbsp;&nbsp;</span>546</span>

						</p>

						<p>

							<span style="font-size: 14px; font-family: 微软雅黑,&amp; #39;"><span style="font-size: 10.5pt; font-family: &amp; #39; Microsoft YaHei UI&amp;#39;; line-height: 1.5;">&nbsp;

									&nbsp;&nbsp;</span>6778</span>

						</p>

						<p>

							<span style="font-size: 14px; font-family: 微软雅黑,&amp; #39;"><span style="font-size: 10.5pt; font-family: &amp; #39; Microsoft YaHei UI&amp;#39;; line-height: 1.5;">&nbsp;

									&nbsp;&nbsp;</span>67</span>

						</p>

						<p>

							<span style="font-size: 14px; font-family: 微软雅黑,&amp; #39;"><span style="font-size: 10.5pt; font-family: &amp; #39; Microsoft YaHei UI&amp;#39;; line-height: 1.5;">&nbsp;

									&nbsp;&nbsp;</span>888</span>

						</p>

						<p>

							<span style="font-size: 14px; font-family: 微软雅黑,&amp; #39;"><span style="font-size: 10.5pt; font-family: &amp; #39; Microsoft YaHei UI&amp;#39;; line-height: 1.5;">&nbsp;

									&nbsp;&nbsp;</span>767</span>

						</p>

						<p>

							<span style="font-size: 14px; font-family: 微软雅黑,&amp; #39;"><span style="font-size: 10.5pt; font-family: &amp; #39; Microsoft YaHei UI&amp;#39;; line-height: 1.5;">&nbsp;

									&nbsp;&nbsp;</span>10000</span>

						</p>

						<p>

							<span style="font-size: 14px; font-family: 微软雅黑,&amp; #39;"><span style="font-size: 10.5pt; font-family: &amp; #39; Microsoft YaHei UI&amp;#39;; line-height: 1.5;">&nbsp;

									&nbsp;&nbsp;</span>35</span>

						</p>

						<p>

							<span style="font-size: 14px; font-family: 微软雅黑,&amp; #39;"><span style="font-size: 10.5pt; font-family: &amp; #39; Microsoft YaHei UI&amp;#39;; line-height: 1.5;">&nbsp;

									&nbsp;&nbsp;</span>34456</span>

						</p>

						<p>

							<strong><span

								style="font-size: 14px; line-height: 25.263158798217773px; font-family: 微软雅黑,&amp; #39; Microsoft YaHei&amp;#39;; color: rgb(66, 139, 202);">1.2案例去重设计思想</span></strong>

						</p>

						<p>

							<span

								style="font-family: 微软雅黑,&amp; #39; Microsoft YaHei&amp;#39;; font-size: 14px;">&nbsp;

								&nbsp; 这个实例主要是对<span style="color: #FF0033;">数据排序</span>，MapReduce过程中就自带排序，MapReduce按Key值对数据排序，如果Key为封装int的IntWritable类型，MapReduce按照数字大小排序，如果Key为封装String的Text类型，那么MapReduce按照字典顺序排序。

							</span>

						</p>

						<p>

							<span

								style="font-family: 微软雅黑,&amp; #39; Microsoft YaHei&amp;#39;; font-size: 14px;">&nbsp;

								&nbsp;

								设计程序的时候，在map中讲读入的数据转化成IntWritable类型，然后作为Key值输出。reduce拿到&lt;key,value-list&gt;之后，讲输入的key作为value输出。并根据value-list中德元素个数决定输出数值的次数。</span>

						</p>

						<p>

							<strong><span

								style="font-size: 14px; line-height: 25.263158798217773px; font-family: 微软雅黑,&amp; #39; Microsoft YaHei&amp;#39;; color: rgb(66, 139, 202);">1.3程序代码</span></strong>

						</p>

						<pre class="brush:java;toolbar:false">package com.zwyq.mr;



import java.io.IOException;



import org.apache.hadoop.conf.Configuration;

import org.apache.hadoop.fs.Path;

import org.apache.hadoop.io.IntWritable;

import org.apache.hadoop.io.Text;

import org.apache.hadoop.mapreduce.Job;

import org.apache.hadoop.mapreduce.Mapper;

import org.apache.hadoop.mapreduce.Reducer;

import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;

import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;



/**

 * 数据排序

 * @author niweiwei

 *

 */

public class Sort {

	//将map收入中的value 转化成IntWritable，作为key输出

	public static class  Map extends  Mapper&lt;Object, Text, IntWritable, IntWritable&gt;{

		private static IntWritable data=new IntWritable();

		//map

		public void map(Object key, Text value, Context context)

				throws IOException, InterruptedException {

			String line=value.toString();

			data.set(Integer.parseInt(line));

			context.write(data, new IntWritable(1));

		}

	}

	

	//reduce将输入中的key复制到输出数据的key上，

	public static class Reduce extends Reducer&lt;IntWritable, IntWritable, IntWritable, IntWritable&gt;{

		//用全局lineNum来代表key的位次，依次累加

		public static IntWritable lineNum=new IntWritable(1);

		//reduce

		@SuppressWarnings(&quot;unused&quot;)

		public void reduce(IntWritable key, Iterable&lt;IntWritable&gt; values,

				Context context)

				throws IOException, InterruptedException {

			//然后根据输入的value-list中元素的个数决定key的输出次数

			for(IntWritable val:values){

				context.write(lineNum, key);

				lineNum=new IntWritable(lineNum.get()+1);

			}

		}

	}



	@SuppressWarnings(&quot;deprecation&quot;)

	public static void main(String[] args) throws IOException, ClassNotFoundException, InterruptedException {

		Configuration conf=new Configuration();

		

		Job job=new Job(conf,&quot;Sort&quot;);

		job.setJarByClass(Sort.class);

		

		//设置map、reduce处理类

		job.setMapperClass(Map.class);

		job.setReducerClass(Reduce.class);

		

		//设置输出类型

		job.setOutputKeyClass(IntWritable.class);

		job.setOutputValueClass(IntWritable.class);

		

		FileInputFormat.addInputPath(job, new Path(args[1]));

		FileOutputFormat.setOutputPath(job, new Path(args[2]));

		System.exit(job.waitForCompletion(true)?0:1);

	}

}</pre>

						<p>

							<strong><span

								style="font-size: 14px; line-height: 25.263158798217773px; font-family: 微软雅黑,&amp; #39; Microsoft YaHei&amp;#39;; color: rgb(66, 139, 202);">1.4代码结果</span></strong>

						</p>

						<p>

							<strong><span

								style="font-size: 14px; line-height: 25.263158798217773px; font-family: 微软雅黑,&amp; #39; Microsoft YaHei&amp;#39;; color: rgb(66, 139, 202);">1）：测试数据准备</span></strong>

						</p>

						<p>

							<span style="font-size: 12pt; line-height: 25.263158798217773px; font-family: 微软雅黑,&amp; #39;">&nbsp;&nbsp;&nbsp;<span

								style="font-size: 14px; line-height: 25.263158798217773px; font-family: 微软雅黑,&amp; #39;">&nbsp;先在hdfs目录user/hadoop下创建heavy目录，在hdfs创建目录，可以使用hadoop

									shell、hadoop api 、或者eclipse hadoop插件创建文件目录。这里用hadoop

									shell。如下图所示，表示创建成功，命令如下。</span></span>

						</p>

						<p>

							<pre class="brush:java;toolbar:false"> [hadoop@masternode hadoop]$ bin/hadoop fs -mkdir -p  /user/hadoop/sort</pre>

						</p>

						<p>

							<span style="font-size: 14px; font-family: 微软雅黑,&amp; #39;">&nbsp;&nbsp;&nbsp;&nbsp;<img

								src="/js/controlcenter/ueditor/jsp/upload1/20131218/24741400378351137.png"

								title="上传文件夹创廄1¤7" /></span>

						</p>

						<p>

							<span style="font-size: 14px; font-family: 微软雅黑,&amp; #39;">&nbsp;&nbsp;&nbsp;&nbsp;注意：不需要创建输出目录。</span>

						</p>

						<p>

							<span style="font-size: 14px; font-family: 微软雅黑,&amp; #39;">&nbsp;&nbsp;&nbsp;&nbsp;在本地建立1个文本文件file.txt，并且上传hdfs，如下图所示表示上传成功，命令如下：</span>

						</p>

						<p>

							<pre class="brush:java;toolbar:false">  [hadoop@masternode hadoop]$ bin/hadoop fs -put /opt/hadoop/file.txt  /user/hadoop/sort</pre>

						</p>

						<p>

							<span style="font-size: 14px; font-family: 微软雅黑,&amp; #39;">&nbsp;&nbsp;&nbsp;&nbsp;<img

								src="/js/controlcenter/ueditor/jsp/upload1/20131218/46911400378494253.png"

								title="cat1.png" /></span>

						</p>

						<p>

							<span style="font-size: 14px; font-family: 微软雅黑,&amp; #39;">&nbsp;&nbsp;&nbsp;&nbsp;从putty远处查看”masternode“也能查看我们上传的两个文件。命令如下，如图所示。</span>

						</p>

						<p>

							<pre class="brush:java;toolbar:false"> [hadoop@masternode hadoop]$ bin/hadoop fs -ls /user/hadoop/sort</pre>

						</p>

						<p>

							<span style="font-size: 14px; font-family: 微软雅黑,&amp; #39;">&nbsp;&nbsp;&nbsp;&nbsp;<img

								src="/js/controlcenter/ueditor/jsp/upload1/20131218/52301400378769483.png"

								title="cat3.png" /></span>

						</p>

						<p>

							<strong style="color: rgb(85, 85, 85); font-family: &amp; #39; Microsoft Yahei&amp;#39; , &amp;#39; Helvetica Neue&amp;#39; , Helvetica , Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(255, 255, 255);"><span

								style="color: rgb(66, 139, 202); font-family: 微软雅黑,&amp; #39;">2）：运行结果查看</span></strong>

						</p>

						<p>

							<strong style="color: rgb(85, 85, 85); font-family: &amp; #39; Microsoft Yahei&amp;#39; , &amp;#39; Helvetica Neue&amp;#39; , Helvetica , Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(255, 255, 255);"><span

								style="color: rgb(66, 139, 202); font-family: 微软雅黑,&amp; #39;"><span

									id="_baidu_bookmark_start_35"

									style="display: none; line-height: 0px;">‍</span></span></strong><span

								id="_baidu_bookmark_start_37"

								style="display: none; line-height: 0px;">‍</span><span

								style="font-size: 14px; font-family: 微软雅黑,&amp; #39;">&nbsp;&nbsp;&nbsp;&nbsp;这时我们右击Eclipse的&quot;DFS

								Locations&quot;中&quot;/user/hadoop&quot;文件夹进行刷新，这时会发现多出一个&quot;sort_out&quot;文件夹，且里面有2个文件，然后打开双其&quot;part-r-00000&quot;文件，会在Eclipse中间把内容显示出来。如图所示。</span><span

								id="_baidu_bookmark_end_38"

								style="display: none; line-height: 0px;">‍</span><strong

								style="color: rgb(85, 85, 85); font-family: &amp; #39; Microsoft Yahei&amp;#39; , &amp;#39; Helvetica Neue&amp;#39; , Helvetica , Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(255, 255, 255);"><span

								style="color: rgb(66, 139, 202); font-family: 微软雅黑,&amp; #39;"><span

									id="_baidu_bookmark_end_36"

									style="display: none; line-height: 0px;">‍</span></span></strong>

						</p>

						<p>

							<span style="font-size: 14px; font-family: 微软雅黑,&amp; #39;"><img

								src="/js/controlcenter/ueditor/jsp/upload1/20131218/31631400379108029.png"

								title="part.png" /><span

								style="color: rgb(85, 85, 85); font-family: &amp; #39; Microsoft YaHei UI&amp;#39; , &amp;#39; Microsoft YaHei&amp;#39; , SimSun , &amp;#39; Segoe UI&amp;#39; , Tahoma , Helvetica, sans-serif, &amp;#39; Microsoft YaHei&amp;#39; , Georgia , Helvetica, Arial, sans-serif, 宋体, PMingLiU, serif; font-size: 14px; line-height: 22.105262756347656px; background-color: rgb(255, 255, 255);">转载请注明：

									转载自小倪的blog（http://www.xnbigdata.com/）</span></span>

						</p>

					</div>
					<!-- 多说评论框 start -->
					<div class="ds-thread" data-thread-key="3" data-title="Mapreduce案例-数据排序|小倪的博客" data-url="/html/article/1/3.shtml"></div>
					<!-- 多说评论框 end -->
				</div>
			</div>

			<!-- Sidebar content -->

			<div class="span3">

				<!-- 日志分类 -->

				<div class="article-classify">

					<h3 class="classify-title">文章分类</h3>

					<ul class="classify-list pull-left" id="classifyList">

					</ul>

				</div>

				<!-- 最新文章 -->

				<div class="new-article">

					<h3 class="classify-title">最新文章</h3>

					<ul class="article-list pull-left" id="newestArticle">

					</ul>

				</div>

				<!-- 友情链接 -->

				<!--#include virtual="/WEB-INF/page/share/links.jsp" -->

			</div>

		</div>

	</div>

	<!-- footer -->

	<!--#include virtual="/WEB-INF/page/share/footer.jsp" -->

	<!-- 回到顶部 -->

	<script src="../../../js/scrolltopcontrol.js" type="text/javascript">

		<div class="rollto"><button class="btn btn-inverse" title="回顶部" data-type="totop"><i class="icon-eject icon-white"></i></button></div><script type="text/javascript"> // <![CDATA[	.fn = function() {	var position = function(element) {	var top = element.position().top, pos = element.css("position");	$(window).scroll(function() {	var scrolls = $(this).scrollTop();	if (scrolls > top) {	if (window.XMLHttpRequest) {	element.css({	position: "fixed",	top: 47	});	} else {	element.css({	top: scrolls	});	}	}else {	element.css({	position: pos,	top: top	});	}	});	};	return $(this).each(function() {	position($(this));	});	};	//绑定	$("#blad").smartFloat();	// ]]>

	</script>

	<div id="topcontrol"

		style="position: fixed; bottom: 150px; right: 0px; opacity: 1; cursor: pointer;"

		title="返回顶部">

		<div class="totop">Top</div>
	</div>
</body>
</html>